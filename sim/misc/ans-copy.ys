# Execution begins at address 0 
			.pos 0
init: 		irmovl Stack, %esp	 	# set up stack pointer 
			irmovl Stack, %ebp 		# set up base pointer 
			call Main 				# execute main program 
			halt 					# terminate program 

			.align 4
# Source block
src:		
			.long 0x000a
			.long 0x00b0
			.long 0x0c00

# Destination block
dest:		
			.long 0x111
			.long 0x222
			.long 0x333

Main: 		pushl %ebp 
			rrmovl %esp,%ebp
			irmovl $3,%eax
			pushl %eax				# push 3
			irmovl dest,%eax
			pushl %eax 				# push dest
			irmovl src,%eax
			pushl %eax				# push src
			call copy_block			# copy_block(src, dest, 3) 
			rrmovl %ebp,%esp
			popl %ebp
			ret

# int copy_block(int *src, int *dest, int len)
copy_block: pushl %ebp 
			rrmovl %esp,%ebp
			mrmovl 8(%ebp),%edx 	# edx = src
			mrmovl 12(%ebp),%ecx	# ecx = dest
			mrmovl 16(%ebp),%ebx	# ebx = 3
			xorl %eax,%eax			# eax = 0
			andl %ebx,%ebx			# test ebx
			je End
Loop:		mrmovl (%edx),%esi
			rmmovl %esi,(%ecx)
			xorl %esi,%eax 			# eax ^= esi
			irmovl $4,%esi
			addl %esi,%edx 			# edx -= 4
			addl %esi,%ecx 			# ecx -= 4
			irmovl $-1,%esi
			addl %esi,%ebx			# ebx--
			jne Loop
End: 		rrmovl %ebp,%esp
			popl %ebp
			ret

# The stack starts here and grows to lower addresses 
			.pos 0x100
Stack:
